<mxfile host="65bd71144e">
    <diagram id="C5RBs43oDa-KdzZeNtuy" name="Page-1">
        <mxGraphModel dx="5304" dy="3167" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="WIyWlLk6GJQsqaUBKTNV-0"/>
                <mxCell id="WIyWlLk6GJQsqaUBKTNV-1" parent="WIyWlLk6GJQsqaUBKTNV-0"/>
                <mxCell id="us10Zrt4n9ONgpduuuo5-0" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 26px;&quot;&gt;&lt;b style=&quot;font-size: 26px;&quot;&gt;static_thread_pool&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 26px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_threadCount: uint32(表明可用的线程数量)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_threadStates: std::unique_ptr&amp;lt;thread_state[]&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_threads: std::vector&amp;lt;std::thread&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_stopRequested: std::atomic&amp;lt;bool&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_globalQueueMutex: std::mutex&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_globalQueueHead: std::atomic&amp;lt;schedule_operation*&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_globalQueueTail: std::atomic&amp;lt;schedule_operation*&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_sleepingThreadCount: std::atomic&amp;lt;std::unit32_t&amp;gt;&lt;/p&gt;&lt;hr&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ static_thread_pool(std::uint32_t): constractor&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+&amp;nbsp;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=26;fontFamily=CaskaydiaConv NF;html=1;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
                    <mxGeometry x="-120" y="120" width="859" height="460" as="geometry"/>
                </mxCell>
                <mxCell id="us10Zrt4n9ONgpduuuo5-1" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 26px;&quot;&gt;&lt;b&gt;thread_state&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 26px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_localQueue: std::unique_ptr&amp;lt;std::atomic&amp;lt;schedule_operation*&amp;gt;[]&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_mask: std::size_t&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_head: std::atomic&amp;lt;std::size_t&amp;gt;(和tail一起用于表明该线程中还有多少任务)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_tail: std::atomic &amp;lt;std::size_t&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_isSleeping: std::atomic &amp;lt;bool&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_remoteMutex: spin_mutex (使用原子变量进行的高效锁)&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_wakeUpEvent: auto_reset_event&lt;/p&gt;&lt;hr&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ method(): Type&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=26;fontFamily=CaskaydiaConv NF;html=1;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
                    <mxGeometry x="-120" y="680" width="1090" height="370" as="geometry"/>
                </mxCell>
                <mxCell id="us10Zrt4n9ONgpduuuo5-2" value="&lt;p style=&quot;margin: 4px 0px 0px; text-align: center; font-size: 26px;&quot;&gt;&lt;b&gt;schedule_operation&lt;/b&gt;&lt;/p&gt;&lt;hr style=&quot;font-size: 26px;&quot;&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_threadPool: static_thread_pool*&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_awaitingCoroutine: std::couroutine_handle&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ m_next: schedu&lt;span style=&quot;background-color: initial;&quot;&gt;le_operation*&lt;/span&gt;&lt;/p&gt;&lt;hr&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ schedule_operation(static_thread_pool*): constractor&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ await_ready(): bool&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ await_suspend(std::roorutine&amp;lt;&amp;gt; )&lt;/p&gt;&lt;p style=&quot;margin: 0px 0px 0px 4px; font-size: 26px;&quot;&gt;+ await_resume()&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=26;fontFamily=CaskaydiaConv NF;html=1;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
                    <mxGeometry x="940" y="190" width="1341" height="320" as="geometry"/>
                </mxCell>
                <mxCell id="us10Zrt4n9ONgpduuuo5-3" value="" style="endArrow=block;startArrow=block;endFill=1;startFill=1;html=1;rounded=0;fontFamily=CaskaydiaConv NF;fontSize=26;fontColor=default;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="us10Zrt4n9ONgpduuuo5-0" target="us10Zrt4n9ONgpduuuo5-2" edge="1">
                    <mxGeometry width="160" relative="1" as="geometry">
                        <mxPoint x="1350" y="860" as="sourcePoint"/>
                        <mxPoint x="1510" y="860" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="us10Zrt4n9ONgpduuuo5-4" value="friend class" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=26;fontFamily=CaskaydiaConv NF;fontColor=default;" parent="us10Zrt4n9ONgpduuuo5-3" vertex="1" connectable="0">
                    <mxGeometry x="-0.125" y="-1" relative="1" as="geometry">
                        <mxPoint x="9" as="offset"/>
                    </mxGeometry>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>